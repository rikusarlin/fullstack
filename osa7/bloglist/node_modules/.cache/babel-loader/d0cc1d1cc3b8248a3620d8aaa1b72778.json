{"ast":null,"code":"import _slicedToArray from \"/home/s015sir/git/fullstack/osa5/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/s015sir/git/fullstack/osa5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport blogsService from './services/blogs';\nimport loginService from './services/login';\nimport './App.css';\nimport Blogs from './components/Blogs';\nimport NewBlog from './components/NewBlog';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport Error from './components/Error';\nimport { useField } from './hooks';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        blogs = _useState2[0],\n        setBlogs = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notificationMessage = _useState4[0],\n        setNotificationMessage = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1];\n\n  const userName = useField('text');\n  const passWord = useField('password');\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        user = _useState8[0],\n        setUser = _useState8[1];\n\n  const blogFormRef = React.createRef();\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const username = userName.value;\n      const password = passWord.value;\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogsService.setToken(user.token);\n      setBlogs((await blogsService.getAll()));\n      setUser(user);\n      setNotificationMessage('login successful');\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 3000);\n    } catch (exception) {\n      console.log('exception: ' + exception);\n      setErrorMessage('wrong username or password');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n    }\n  };\n\n  const handleLogout = async event => {\n    event.preventDefault();\n\n    try {\n      window.localStorage.removeItem('loggedBlogappUser');\n      setUser(null);\n      setNotificationMessage('logout successful');\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 3000);\n    } catch (exception) {\n      console.log('exception: ' + exception);\n      setErrorMessage('error in logut');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n    }\n  };\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogsService.setToken(user.token);\n    }\n  }, []);\n\n  const blogList = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Blogs, {\n    blogs: blogs,\n    setBlogs: setBlogs,\n    setNotificationMessage: setNotificationMessage,\n    setErrorMessage: setErrorMessage,\n    blogsService: blogsService,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n\n  const loginForm = () => React.createElement(\"div\", {\n    className: \"loginForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", Object.assign({}, userName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", Object.assign({}, passWord, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"loginButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"login\")));\n\n  const blogForm = () => React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    ref: blogFormRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(NewBlog, {\n    setBlogs: setBlogs,\n    setNotificationMessage: setNotificationMessage,\n    setErrorMessage: setErrorMessage,\n    blogFormRef: blogFormRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(Notification, {\n    message: notificationMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(Error, {\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), user === null ? loginForm() : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, user.name, \" logged in \", React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"logout\"))), blogForm(), blogList()));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/s015sir/git/fullstack/osa5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","blogsService","loginService","Blogs","NewBlog","Notification","Togglable","Error","useField","App","blogs","setBlogs","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","userName","passWord","user","setUser","blogFormRef","createRef","handleLogin","event","preventDefault","username","value","password","login","window","localStorage","setItem","JSON","stringify","setToken","token","getAll","setTimeout","exception","console","log","handleLogout","removeItem","loggedUserJSON","getItem","parse","blogList","loginForm","blogForm","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport blogsService from './services/blogs'\nimport loginService from './services/login'\nimport './App.css';\nimport Blogs from './components/Blogs'\nimport NewBlog from './components/NewBlog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport Error from './components/Error'\nimport  { useField } from './hooks'\n\nconst App = () => {\n  const [ blogs, setBlogs] = useState([])\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const userName = useField('text')\n  const passWord = useField('password')\n  const [user, setUser] = useState(null)\n\n  const blogFormRef = React.createRef()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const username = userName.value\n      const password = passWord.value\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogsService.setToken(user.token)\n      setBlogs(await blogsService.getAll())\n      setUser(user)\n      setNotificationMessage('login successful')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 3000)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      setErrorMessage('wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    try {\n      window.localStorage.removeItem('loggedBlogappUser')\n      setUser(null)\n      setNotificationMessage('logout successful')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 3000)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      setErrorMessage('error in logut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n  }\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogsService.setToken(user.token)\n    }\n  }, [])\n\n  const blogList = () => (\n    <div>\n      <Blogs\n        blogs = {blogs}\n        setBlogs = {setBlogs}\n        setNotificationMessage = {setNotificationMessage}\n        setErrorMessage = {setErrorMessage}\n        blogsService = {blogsService}\n      />\n    </div>\n )\n\n  const loginForm = () => (\n    <div className=\"loginForm\">\n      <h3>Login</h3>\n      <form onSubmit={handleLogin}>\n        <div>\n            <label htmlFor=\"Username\">Username</label>\n            <input {...userName} />\n        </div>\n        <div>\n          <label htmlFor=\"Password\">Password</label>\n          <input {...passWord} />\n        </div>\n        <button type=\"submit\" className=\"loginButton\">login</button>\n      </form>\n    </div>\n  )\n\n const blogForm = () => (\n  <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n    <NewBlog \n      setBlogs={setBlogs}\n      setNotificationMessage={setNotificationMessage}\n      setErrorMessage={setErrorMessage}\n      blogFormRef={blogFormRef}\n    />\n  </Togglable>\n )\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <Notification message={notificationMessage}/>\n      <Error message={errorMessage}/>\n      {user === null ?\n        loginForm()\n        :\n        <div>\n          <form onSubmit={handleLogout}>\n            <p>{user.name} logged in <button type=\"submit\">logout</button></p>\n          </form>\n          {blogForm()}\n          {blogList()}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}