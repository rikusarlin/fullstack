{"ast":null,"code":"import _slicedToArray from \"/home/s015sir/git/fullstack/osa5/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/s015sir/git/fullstack/osa5/bloglist-frontend/src/components/NewBlog.js\";\nimport React, { useState, useEffect } from 'react';\nimport blogsService from '../services/blogs';\n\nconst NewBlog = ({\n  blogs,\n  setBlogs,\n  setNotificationMessage,\n  setErrorMessage\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        author = _useState4[0],\n        setAuthor = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        url = _useState6[0],\n        setUrl = _useState6[1];\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      blogsService.setToken(user.token);\n    }\n  }, []);\n\n  const handlePost = async event => {\n    event.preventDefault();\n\n    try {\n      const newBlog = {\n        title: title,\n        author: author,\n        url: url\n      };\n      await blogsService.create(newBlog);\n      setBlogs((await blogsService.getAll()));\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n      setNotificationMessage('added new blog');\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    } catch (exception) {\n      console.log('exception: ' + exception);\n      setErrorMessage('error in adding new blog');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"New blog\"), React.createElement(\"form\", {\n    onSubmit: handlePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"title\", React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    name: \"title\",\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"author\", React.createElement(\"input\", {\n    type: \"text\",\n    value: author,\n    name: \"author\",\n    onChange: ({\n      target\n    }) => setAuthor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"url\", React.createElement(\"input\", {\n    type: \"text\",\n    value: url,\n    name: \"url\",\n    onChange: ({\n      target\n    }) => setUrl(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"create\")));\n};\n\nexport default NewBlog;","map":{"version":3,"sources":["/home/s015sir/git/fullstack/osa5/bloglist-frontend/src/components/NewBlog.js"],"names":["React","useState","useEffect","blogsService","NewBlog","blogs","setBlogs","setNotificationMessage","setErrorMessage","title","setTitle","author","setAuthor","url","setUrl","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","setToken","token","handlePost","event","preventDefault","newBlog","create","getAll","setTimeout","exception","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport blogsService from '../services/blogs'\n\nconst NewBlog = ({blogs, setBlogs, setNotificationMessage, setErrorMessage}) => {\n  const [title, setTitle] = useState('') \n  const [author, setAuthor] = useState('') \n  const [url, setUrl] = useState('') \n \n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      blogsService.setToken(user.token)\n    }\n  }, [])\n\n  const handlePost = async (event) => {\n    event.preventDefault()\n    try {\n      const newBlog = {\n        title: title,\n        author: author,\n        url: url\n      }\n      await blogsService.create(newBlog)\n      setBlogs(await blogsService.getAll())\n      setTitle('')\n      setAuthor('')\n      setUrl('')\n      setNotificationMessage('added new blog')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      setErrorMessage('error in adding new blog')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  return(\n    <div>\n    <h3>New blog</h3>\n    <form onSubmit={handlePost}>\n      <div>\n        title\n          <input\n          type=\"text\"\n          value={title}\n          name=\"title\"\n          onChange={({ target }) => setTitle(target.value)}\n        />\n      </div>\n      <div>\n        author\n          <input\n          type=\"text\"\n          value={author}\n          name=\"author\"\n          onChange={({ target }) => setAuthor(target.value)}\n        />\n      </div>\n      <div>\n        url\n          <input\n          type=\"text\"\n          value={url}\n          name=\"url\"\n          onChange={({ target }) => setUrl(target.value)}\n        />\n      </div>\n      <button type=\"submit\">create</button>\n    </form>\n    </div>\n  )\n}\n\nexport default NewBlog"]},"metadata":{},"sourceType":"module"}