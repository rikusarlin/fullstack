{"ast":null,"code":"import _slicedToArray from \"/home/s015sir/git/fullstack/osa5/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/s015sir/git/fullstack/osa5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport blogsService from '../services/blogs';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Blogs from './components/Blogs';\nimport Notification from './components/Notification';\nimport Error from './components/Error';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        blogs = _useState2[0],\n        setBlogs = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notificationMessage = _useState4[0],\n        setNotificationMessage = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1]; // This loads the initial list\n\n\n  useEffect(() => {\n    blogsService.getAll().then(returnedBlogs => {\n      setBlogs(returnedBlogs);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Bloglist\"), React.createElement(Notification, {\n    message: notificationMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Error, {\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(Blogs, {\n    blogs: blogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/s015sir/git/fullstack/osa5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","blogsService","Blogs","Notification","Error","App","blogs","setBlogs","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","getAll","then","returnedBlogs"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACWN,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACRO,KADQ;AAAA,QACDC,QADC;;AAAA,qBAEwCR,QAAQ,CAAC,IAAD,CAFhD;AAAA;AAAA,QAERS,mBAFQ;AAAA,QAEaC,sBAFb;;AAAA,qBAG0BV,QAAQ,CAAC,IAAD,CAHlC;AAAA;AAAA,QAGRW,YAHQ;AAAA,QAGMC,eAHN,kBAMhB;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,YAAY,CACTW,MADH,GAEGC,IAFH,CAEQC,aAAa,IAAI;AACrBP,MAAAA,QAAQ,CAACO,aAAD,CAAR;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEN,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAIJ,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAxBD;;AA0BA,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport blogsService from '../services/blogs'\nimport logo from './logo.svg';\nimport './App.css';\nimport Blogs from './components/Blogs'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\nconst App = () => {\n  const [ blogs, setBlogs] = useState([])\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n\n  // This loads the initial list\n  useEffect(() => {\n    blogsService\n      .getAll()\n      .then(returnedBlogs => {\n        setBlogs(returnedBlogs)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Bloglist</h2>\n      <Notification message={notificationMessage}/>\n      <Error message={errorMessage}/>\n      <h3>Blogs</h3>\n      <Blogs blogs = {blogs} />\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}