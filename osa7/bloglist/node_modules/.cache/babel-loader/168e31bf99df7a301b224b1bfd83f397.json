{"ast":null,"code":"import _objectWithoutProperties from \"/home/s015sir/git/fullstack/osa7/bloglist/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toPropertyKey from \"/home/s015sir/git/fullstack/osa7/bloglist/node_modules/@babel/runtime/helpers/esm/toPropertyKey\";\nimport _slicedToArray from \"/home/s015sir/git/fullstack/osa7/bloglist/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/s015sir/git/fullstack/osa7/bloglist/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport blogsService from './services/blogs';\nimport loginService from './services/login';\nimport './App.css';\nimport Blogs from './components/Blogs';\nimport Notification from './components/Notification';\nimport { showInfo, showError } from './reducers/notificationReducer';\nimport Togglable from './components/Togglable';\nimport { useField } from './hooks';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        blogs = _useState2[0],\n        setBlogs = _useState2[1];\n\n  const userName = useField('text');\n  const passWord = useField('password');\n  const title = useField('text');\n  const author = useField('text');\n  const url = useField('text');\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const blogFormRef = React.createRef();\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const username = userName.value;\n      const password = passWord.value;\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogsService.setToken(user.token);\n      setBlogs((await blogsService.getAll()));\n      setUser(user);\n      userName.reset();\n      passWord.reset();\n      showInfo('login successful', 3);\n    } catch (exception) {\n      console.log('exception: ' + exception);\n      showError('wrong username or password', 3);\n    }\n  };\n\n  const handleLogout = async event => {\n    event.preventDefault();\n\n    try {\n      window.localStorage.removeItem('loggedBlogappUser');\n      setUser(null);\n      showInfo('logout successful', 3);\n    } catch (exception) {\n      console.log('exception: ' + exception);\n      showError('error in logut', 3);\n    }\n  };\n\n  const handlePost = async event => {\n    event.preventDefault();\n\n    try {\n      blogFormRef.current.toggleVisibility();\n      const newBlog = {\n        title: title.value,\n        author: author.value,\n        url: url.value\n      };\n      await blogsService.create(newBlog);\n      setBlogs((await blogsService.getAll()));\n      url.reset();\n      title.reset();\n      author.reset();\n      showInfo('added new blog', 3);\n    } catch (exception) {\n      console.log('exception: ' + exception);\n      showError('error in adding new blog', 3);\n    }\n  };\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogsService.setToken(user.token);\n    }\n  }, []);\n\n  const blogList = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Blogs, {\n    blogs: blogs,\n    setBlogs: setBlogs,\n    blogsService: blogsService,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n\n  const removeProperty = prop => (_ref) => {\n    let _ = _ref[prop],\n        rest = _objectWithoutProperties(_ref, [prop].map(_toPropertyKey));\n\n    return rest;\n  };\n\n  const removeReset = removeProperty('reset');\n\n  const loginForm = () => React.createElement(\"div\", {\n    className: \"loginForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", Object.assign({}, removeReset(userName), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", Object.assign({}, removeReset(passWord), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"loginButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"login\")));\n\n  const blogForm = () => React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    ref: blogFormRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"New blog\"), React.createElement(\"form\", {\n    onSubmit: handlePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", Object.assign({}, removeReset(title), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Author\"), React.createElement(\"input\", Object.assign({}, removeReset(author), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"URL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"URL\"), React.createElement(\"input\", Object.assign({}, removeReset(url), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"create\"))));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), user === null ? loginForm() : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, user.name, \" logged in \", React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"logout\"))), blogForm(), blogList()));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/s015sir/git/fullstack/osa7/bloglist/src/App.js"],"names":["React","useState","useEffect","blogsService","loginService","Blogs","Notification","showInfo","showError","Togglable","useField","App","blogs","setBlogs","userName","passWord","title","author","url","user","setUser","blogFormRef","createRef","handleLogin","event","preventDefault","username","value","password","login","window","localStorage","setItem","JSON","stringify","setToken","token","getAll","reset","exception","console","log","handleLogout","removeItem","handlePost","current","toggleVisibility","newBlog","create","loggedUserJSON","getItem","parse","blogList","removeProperty","prop","_","rest","removeReset","loginForm","blogForm","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport blogsService from './services/blogs'\nimport loginService from './services/login'\nimport './App.css';\nimport Blogs from './components/Blogs'\nimport Notification from './components/Notification'\nimport { showInfo, showError } from './reducers/notificationReducer'\nimport Togglable from './components/Togglable'\nimport  { useField } from './hooks'\n\nconst App = () => {\n  const [ blogs, setBlogs] = useState([])\n  const userName = useField('text')\n  const passWord = useField('password')\n  const title = useField('text')\n  const author = useField('text')\n  const url = useField('text')\n  const [user, setUser] = useState(null)\n\n  const blogFormRef = React.createRef()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const username = userName.value\n      const password = passWord.value\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogsService.setToken(user.token)\n      setBlogs(await blogsService.getAll())\n      setUser(user)\n      userName.reset()\n      passWord.reset()\n      showInfo('login successful', 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      showError('wrong username or password',3)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    try {\n      window.localStorage.removeItem('loggedBlogappUser')\n      setUser(null)\n      showInfo('logout successful', 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      showError('error in logut', 3)\n    }\n  }\n\n  const handlePost = async (event) => {\n    event.preventDefault()\n    \n    try {\n      blogFormRef.current.toggleVisibility()\n      const newBlog = {\n        title: title.value,\n        author: author.value,\n        url: url.value\n      }\n      await blogsService.create(newBlog)\n      setBlogs(await blogsService.getAll())\n      url.reset()\n      title.reset()\n      author.reset()\n      showInfo('added new blog', 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      showError('error in adding new blog', 3)\n    }\n  }\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogsService.setToken(user.token)\n    }\n  }, [])\n\n  const blogList = () => (\n    <div>\n      <Blogs\n        blogs = {blogs}\n        setBlogs = {setBlogs}\n        blogsService = {blogsService}\n      />\n    </div>\n )\n\n  const removeProperty = prop => ({ [prop]: _, ...rest }) => rest\n  const removeReset = removeProperty('reset')\n\n  const loginForm = () => (\n    <div className=\"loginForm\">\n      <h3>Login</h3>\n      <form onSubmit={handleLogin}>\n        <div>\n            <label htmlFor=\"Username\">Username</label>\n            <input {...removeReset(userName)} /> \n        </div>\n        <div>\n          <label htmlFor=\"Password\">Password</label>\n          <input {...removeReset(passWord)} />\n        </div>\n        <button type=\"submit\" className=\"loginButton\">login</button>\n      </form>\n    </div>\n  )\n\n  const blogForm = () => (\n  <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n    <div>\n    <h3>New blog</h3>\n    <form onSubmit={handlePost}>\n      <div>\n        <label htmlFor=\"Title\">Title</label>\n        <input {...removeReset(title)}/>\n      </div>\n      <div>\n        <label htmlFor=\"Author\">Author</label>\n        <input {...removeReset(author)}/>\n      </div>\n      <div>\n        <label htmlFor=\"URL\">URL</label>\n        <input {...removeReset(url)}/>\n      </div>\n      <button type=\"submit\">create</button>\n    </form>\n    </div>\n  </Togglable>\n )\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <Notification/>\n      {user === null ?\n        loginForm()\n        :\n        <div>\n          <form onSubmit={handleLogout}>\n            <p>{user.name} logged in <button type=\"submit\">logout</button></p>\n          </form>\n          {blogForm()}\n          {blogList()}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}