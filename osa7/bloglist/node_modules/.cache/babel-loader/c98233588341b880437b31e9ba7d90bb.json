{"ast":null,"code":"import _objectSpread from \"/home/s015sir/git/fullstack/osa7/bloglist/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport blogService from '../services/blogs';\nexport const likeBlog = blogToLike => {\n  return async dispatch => {\n    const content = _objectSpread({}, blogToLike, {\n      likes: blogToLike.likes + 1\n    });\n\n    const updatedBlog = await blogService.update(content);\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: updatedBlog\n    });\n  };\n};\nexport const deleteBlog = blogId => {\n  return async dispatch => {\n    await blogService.deleteBlog(blogId);\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: blogId\n    });\n  };\n};\nexport const createBlog = content => {\n  return async dispatch => {\n    const newBlog = await blogService.create(content);\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog\n    });\n  };\n};\nexport const fetchBlogs = () => {\n  console.log(\"In blogService.fetchBlogs\");\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    console.log(\"Blogs.length: \", blogs.length);\n    dispatch({\n      type: 'FETCH_BLOGS',\n      data: blogs\n    });\n  };\n};\nexport const emptyBlogList = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'EMPTY_BLOG_LIST',\n      data: null\n    });\n  };\n};\n\nconst reducer = (state = [], action) => {\n  console.log('state before action in blogReducer: ', state);\n  console.log('action in blogReducer', action);\n\n  switch (action.type) {\n    case 'NEW_BLOG':\n      return [...state, action.data];\n\n    case 'LIKE_BLOG':\n      const id = action.data.id;\n      return state.map(blog => blog.id !== id ? blog : action.data);\n\n    case 'DELETE_BLOG':\n      const deletedId = action.data.id;\n      return state.filter(blog => blog.id !== deletedId);\n\n    case 'FETCH_BLOGS':\n      return action.data;\n\n    case 'EMPTY_BLOG_LIST':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/s015sir/git/fullstack/osa7/bloglist/src/reducers/blogReducer.js"],"names":["blogService","likeBlog","blogToLike","dispatch","content","likes","updatedBlog","update","type","data","deleteBlog","blogId","createBlog","newBlog","create","fetchBlogs","console","log","blogs","getAll","length","emptyBlogList","reducer","state","action","id","map","blog","deletedId","filter"],"mappings":"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","sourcesContent":["import blogService from '../services/blogs'\n\nexport const likeBlog = (blogToLike) => {\n  return async dispatch => {\n    const content = { \n      ...blogToLike, \n      likes: blogToLike.likes +1 \n    }\n    const updatedBlog = await blogService.update(content)\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: updatedBlog\n    })\n  }\n}\n\nexport const deleteBlog = (blogId) => {\n  return async dispatch => {\n    await blogService.deleteBlog(blogId)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: blogId\n    })\n  }\n}\n\nexport const createBlog = (content) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(content)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n  }\n}\n\nexport const fetchBlogs = () => {\n  console.log(\"In blogService.fetchBlogs\")\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    console.log(\"Blogs.length: \",blogs.length)\n    dispatch({\n      type: 'FETCH_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nexport const emptyBlogList = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'EMPTY_BLOG_LIST',\n      data: null,\n    })\n  }\n}\n\nconst reducer = (state = [], action) => {\n  console.log('state before action in blogReducer: ', state)\n  console.log('action in blogReducer', action)\n\n  switch(action.type) {\n    case 'NEW_BLOG':\n      return [...state, action.data]\n    case 'LIKE_BLOG':\n      const id = action.data.id\n      return state.map(blog =>\n        blog.id !== id ? blog : action.data \n      )\n    case 'DELETE_BLOG':\n      const deletedId = action.data.id\n      return state.filter(blog => \n        blog.id !== deletedId\n      )\n    case 'FETCH_BLOGS':\n      return action.data\n    case 'EMPTY_BLOG_LIST':\n      return null\n    default:\n      return state\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}