{"ast":null,"code":"import _objectWithoutProperties from \"/home/s015sir/git/fullstack/osa7/bloglist/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toPropertyKey from \"/home/s015sir/git/fullstack/osa7/bloglist/node_modules/@babel/runtime/helpers/esm/toPropertyKey\";\nimport _slicedToArray from \"/home/s015sir/git/fullstack/osa7/bloglist/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/s015sir/git/fullstack/osa7/bloglist/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport blogsService from './services/blogs';\nimport loginService from './services/login';\nimport './App.css';\nimport Blogs from './components/Blogs';\nimport Notification from './components/Notification';\nimport { showInfo, showError } from './reducers/notificationReducer';\nimport { fetchBlogs, emptyBlogList, createBlog } from './reducers/blogReducer';\nimport Togglable from './components/Togglable';\nimport { useField } from './hooks';\nimport { connect } from 'react-redux';\n\nconst App = props => {\n  const userName = useField('text');\n  const passWord = useField('password');\n  const title = useField('text');\n  const author = useField('text');\n  const url = useField('text');\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const blogFormRef = React.createRef();\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const username = userName.value;\n      const password = passWord.value;\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      props.fetchBlogs(user.token);\n      setUser(user);\n      userName.reset();\n      passWord.reset();\n      props.showInfo('login successful', 3);\n    } catch (exception) {\n      console.log('exception: ' + exception);\n      props.showError('wrong username or password', 3);\n    }\n  };\n\n  const handleLogout = async event => {\n    event.preventDefault();\n\n    try {\n      window.localStorage.removeItem('loggedBlogappUser');\n      setUser(null);\n      props.emptyBlogList();\n      props.showInfo('logout successful', 3);\n    } catch (exception) {\n      console.log('exception: ' + exception);\n      props.showError('error in logut', 3);\n    }\n  };\n\n  const handlePost = async event => {\n    event.preventDefault();\n\n    try {\n      blogFormRef.current.toggleVisibility();\n      const newBlog = {\n        title: title.value,\n        author: author.value,\n        url: url.value\n      };\n      props.createBlog(newBlog);\n      url.reset();\n      title.reset();\n      author.reset();\n      props.showInfo('added new blog', 3);\n    } catch (exception) {\n      console.log('exception: ' + exception);\n      props.showError('error in adding new blog', 3);\n    }\n  };\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogsService.setToken(user.token);\n    }\n  }, []);\n\n  const blogList = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Blogs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n\n  const removeProperty = prop => (_ref) => {\n    let _ = _ref[prop],\n        rest = _objectWithoutProperties(_ref, [prop].map(_toPropertyKey));\n\n    return rest;\n  };\n\n  const removeReset = removeProperty('reset');\n\n  const loginForm = () => React.createElement(\"div\", {\n    className: \"loginForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", Object.assign({}, removeReset(userName), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", Object.assign({}, removeReset(passWord), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"loginButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"login\")));\n\n  const blogForm = () => React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    ref: blogFormRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"New blog\"), React.createElement(\"form\", {\n    onSubmit: handlePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", Object.assign({}, removeReset(title), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Author\"), React.createElement(\"input\", Object.assign({}, removeReset(author), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"URL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"URL\"), React.createElement(\"input\", Object.assign({}, removeReset(url), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"create\"))));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), user === null ? loginForm() : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, user.name, \" logged in \", React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"logout\"))), blogForm(), blogList()));\n};\n/*\nconst mapStateToProps = (state) => {\n  return {\n    notes: state.notes,\n    filter: state.filter,\n  }\n}\n*/\n\n\nconst mapDispatchToProps = {\n  showInfo,\n  showError,\n  fetchBlogs,\n  emptyBlogList,\n  createBlog\n};\nexport default connect( //mapStateToProps,\nnull, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/s015sir/git/fullstack/osa7/bloglist/src/App.js"],"names":["React","useState","useEffect","blogsService","loginService","Blogs","Notification","showInfo","showError","fetchBlogs","emptyBlogList","createBlog","Togglable","useField","connect","App","props","userName","passWord","title","author","url","user","setUser","blogFormRef","createRef","handleLogin","event","preventDefault","username","value","password","login","window","localStorage","setItem","JSON","stringify","token","reset","exception","console","log","handleLogout","removeItem","handlePost","current","toggleVisibility","newBlog","loggedUserJSON","getItem","parse","setToken","blogList","removeProperty","prop","_","rest","removeReset","loginForm","blogForm","name","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport blogsService from './services/blogs'\nimport loginService from './services/login'\nimport './App.css';\nimport Blogs from './components/Blogs'\nimport Notification from './components/Notification'\nimport { showInfo, showError } from './reducers/notificationReducer'\nimport { fetchBlogs, emptyBlogList, createBlog } from './reducers/blogReducer'\nimport Togglable from './components/Togglable'\nimport  { useField } from './hooks'\nimport { connect } from 'react-redux'\n\nconst App = (props) => {\n  const userName = useField('text')\n  const passWord = useField('password')\n  const title = useField('text')\n  const author = useField('text')\n  const url = useField('text')\n  const [user, setUser] = useState(null)\n\n  const blogFormRef = React.createRef()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const username = userName.value\n      const password = passWord.value\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      props.fetchBlogs(user.token)\n      setUser(user)\n      userName.reset()\n      passWord.reset()\n      props.showInfo('login successful', 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      props.showError('wrong username or password',3)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    try {\n      window.localStorage.removeItem('loggedBlogappUser')\n      setUser(null)\n      props.emptyBlogList()\n      props.showInfo('logout successful', 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      props.showError('error in logut', 3)\n    }\n  }\n\n  const handlePost = async (event) => {\n    event.preventDefault()\n    \n    try {\n      blogFormRef.current.toggleVisibility()\n      const newBlog = {\n        title: title.value,\n        author: author.value,\n        url: url.value\n      }\n      props.createBlog(newBlog)\n      url.reset()\n      title.reset()\n      author.reset()\n      props.showInfo('added new blog', 3)\n    } catch (exception) {\n      console.log('exception: '+exception)\n      props.showError('error in adding new blog', 3)\n    }\n  }\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogsService.setToken(user.token)\n    }\n  }, [])\n\n  const blogList = () => (\n    <div>\n      <Blogs/>\n    </div>\n )\n\n  const removeProperty = prop => ({ [prop]: _, ...rest }) => rest\n  const removeReset = removeProperty('reset')\n\n  const loginForm = () => (\n    <div className=\"loginForm\">\n      <h3>Login</h3>\n      <form onSubmit={handleLogin}>\n        <div>\n            <label htmlFor=\"Username\">Username</label>\n            <input {...removeReset(userName)} /> \n        </div>\n        <div>\n          <label htmlFor=\"Password\">Password</label>\n          <input {...removeReset(passWord)} />\n        </div>\n        <button type=\"submit\" className=\"loginButton\">login</button>\n      </form>\n    </div>\n  )\n\n  const blogForm = () => (\n  <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n    <div>\n    <h3>New blog</h3>\n    <form onSubmit={handlePost}>\n      <div>\n        <label htmlFor=\"Title\">Title</label>\n        <input {...removeReset(title)}/>\n      </div>\n      <div>\n        <label htmlFor=\"Author\">Author</label>\n        <input {...removeReset(author)}/>\n      </div>\n      <div>\n        <label htmlFor=\"URL\">URL</label>\n        <input {...removeReset(url)}/>\n      </div>\n      <button type=\"submit\">create</button>\n    </form>\n    </div>\n  </Togglable>\n )\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <Notification/>\n      {user === null ?\n        loginForm()\n        :\n        <div>\n          <form onSubmit={handleLogout}>\n            <p>{user.name} logged in <button type=\"submit\">logout</button></p>\n          </form>\n          {blogForm()}\n          {blogList()}\n        </div>\n      }\n    </div>\n  )\n}\n\n/*\nconst mapStateToProps = (state) => {\n  return {\n    notes: state.notes,\n    filter: state.filter,\n  }\n}\n*/\n\nconst mapDispatchToProps = {\n  showInfo, showError, fetchBlogs, emptyBlogList, createBlog\n}\n\nexport default connect(\n  //mapStateToProps,\n  null,\n  mapDispatchToProps\n)(App)\n"]},"metadata":{},"sourceType":"module"}