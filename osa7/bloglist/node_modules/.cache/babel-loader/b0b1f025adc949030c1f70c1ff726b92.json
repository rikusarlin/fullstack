{"ast":null,"code":"var _jsxFileName = \"/home/s015sir/git/fullstack/osa7/bloglist/src/components/Blogs.js\";\nimport React, { useEffect } from 'react';\nimport Blog from './Blog';\nimport { fetchBlogs } from '../reducers/blogReducer';\nimport { connect } from 'react-redux';\n\nconst Blogs = props => {\n  var username = props.user.username;\n  useEffect(() => {\n    props.fetchBlogs(props.user.token);\n  }, [username]); // const filteredBlogs = blogs.filter(blog => blog.author.toUpperCase().indexOf(filterValue.toUpperCase()) >= 0)\n\n  console.log(\"props.blogs: \", props.blogs);\n\n  if (props.blogs !== null) {\n    const sortedBlogs = props.blogs.sort((a, b) => b.likes - a.likes);\n    const blogList = sortedBlogs.map(blog => React.createElement(Blog, {\n      key: blog.id,\n      id: blog.id,\n      title: blog.title,\n      author: blog.author,\n      likes: blog.likes,\n      url: blog.url,\n      user: blog.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n\n    if (props.user.user !== null) {\n      return React.createElement(\"div\", {\n        className: \"blogList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, blogList);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchBlogs\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Blogs);","map":{"version":3,"sources":["/home/s015sir/git/fullstack/osa7/bloglist/src/components/Blogs.js"],"names":["React","useEffect","Blog","fetchBlogs","connect","Blogs","props","username","user","token","console","log","blogs","sortedBlogs","sort","a","b","likes","blogList","map","blog","id","title","author","url","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,MAAIC,QAAQ,GAACD,KAAK,CAACE,IAAN,CAAWD,QAAxB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACH,UAAN,CAAiBG,KAAK,CAACE,IAAN,CAAWC,KAA5B;AACD,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT,CAFuB,CAMvB;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BL,KAAK,CAACM,KAAlC;;AACA,MAAGN,KAAK,CAACM,KAAN,KAAgB,IAAnB,EAAwB;AACtB,UAAMC,WAAW,GAAGP,KAAK,CAACM,KAAN,CAAYE,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAtC,CAApB;AACA,UAAMC,QAAQ,GAAGL,WAAW,CAACM,GAAZ,CAAgBC,IAAI,IACnC,oBAAC,IAAD;AACE,MAAA,GAAG,EAAGA,IAAI,CAACC,EADb;AAEE,MAAA,EAAE,EAAGD,IAAI,CAACC,EAFZ;AAGE,MAAA,KAAK,EAAGD,IAAI,CAACE,KAHf;AAIE,MAAA,MAAM,EAAGF,IAAI,CAACG,MAJhB;AAKE,MAAA,KAAK,EAAGH,IAAI,CAACH,KALf;AAME,MAAA,GAAG,EAAGG,IAAI,CAACI,GANb;AAOE,MAAA,IAAI,EAAGJ,IAAI,CAACZ,IAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,CAAjB;;AAWA,QAAGF,KAAK,CAACE,IAAN,CAAWA,IAAX,KAAoB,IAAvB,EAA4B;AAC1B,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BU,QAA3B,CADF;AAGD;AACF;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA5BD;;AA+BA,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,KAAK,EAAEc,KAAK,CAACd,KADR;AAELJ,IAAAA,IAAI,EAAEkB,KAAK,CAAClB;AAFP,GAAP;AAID,CALD;;AAOA,MAAMmB,kBAAkB,GAAG;AACzBxB,EAAAA;AADyB,CAA3B;AAIA,eAAeC,OAAO,CACpBqB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbtB,KAHa,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport Blog from './Blog'\nimport { fetchBlogs } from '../reducers/blogReducer'\nimport { connect } from 'react-redux'\n\n\nconst Blogs = (props) => {\n  var username=props.user.username\n  useEffect(() => {\n    props.fetchBlogs(props.user.token)\n  }, [username])\n\n  // const filteredBlogs = blogs.filter(blog => blog.author.toUpperCase().indexOf(filterValue.toUpperCase()) >= 0)\n  console.log(\"props.blogs: \",props.blogs)\n  if(props.blogs !== null){\n    const sortedBlogs = props.blogs.sort((a,b) => b.likes - a.likes )\n    const blogList = sortedBlogs.map(blog =>\n      <Blog\n        key={ blog.id }\n        id={ blog.id }\n        title={ blog.title }\n        author={ blog.author }\n        likes={ blog.likes }\n        url={ blog.url }\n        user={ blog.user }\n      />\n    )\n    if(props.user.user !== null){\n      return(\n        <div className=\"blogList\">{blogList}</div>\n      )\n    }\n  } \n  return(<div/>)\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchBlogs,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Blogs)\n"]},"metadata":{},"sourceType":"module"}