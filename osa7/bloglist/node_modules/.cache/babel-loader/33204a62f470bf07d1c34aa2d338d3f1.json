{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = \"bearer \".concat(newToken);\n};\n\nconst getAll = async () => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  const response = await axios.get(baseUrl, config);\n  return response.data;\n};\n\nconst create = async newBlog => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  const response = await axios.post(baseUrl, newBlog, config);\n  return response.data;\n};\n\nconst update = async updatedBlog => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  const response = await axios.put(baseUrl + '/' + updatedBlog.id, updatedBlog, config);\n  return response.data;\n};\n\nconst deleteBlog = async id => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  const response = await axios.delete(baseUrl + '/' + id, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  setToken,\n  create,\n  update,\n  deleteBlog\n};","map":{"version":3,"sources":["/home/s015sir/git/fullstack/osa5/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","config","headers","response","get","data","create","newBlog","post","update","updatedBlog","put","id","deleteBlog","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,oBAAaE,QAAb,CAAL;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,YAAY;AACzB,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,uBAAiBL;AAAnB;AADI,GAAf;AAGA,QAAMM,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUR,OAAV,EAAmBK,MAAnB,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACD,CAND;;AAQA,MAAMC,MAAM,GAAG,MAAOC,OAAP,IAAmB;AAChC,QAAMN,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,uBAAiBL;AAAnB;AADI,GAAf;AAGA,QAAMM,QAAQ,GAAG,MAAMR,KAAK,CAACa,IAAN,CAAWZ,OAAX,EAAoBW,OAApB,EAA6BN,MAA7B,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACD,CAND;;AAQA,MAAMI,MAAM,GAAG,MAAOC,WAAP,IAAuB;AACpC,QAAMT,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,uBAAiBL;AAAnB;AADI,GAAf;AAGA,QAAMM,QAAQ,GAAG,MAAMR,KAAK,CAACgB,GAAN,CAAUf,OAAO,GAAC,GAAR,GAAYc,WAAW,CAACE,EAAlC,EAAsCF,WAAtC,EAAmDT,MAAnD,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACD,CAND;;AAQA,MAAMQ,UAAU,GAAG,MAAOD,EAAP,IAAc;AAC/B,QAAMX,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,uBAAiBL;AAAnB;AADI,GAAf;AAGA,QAAMM,QAAQ,GAAG,MAAMR,KAAK,CAACmB,MAAN,CAAalB,OAAO,GAAC,GAAR,GAAYgB,EAAzB,EAA4BX,MAA5B,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACD,CAND;;AAQA,eAAe;AAAEL,EAAAA,MAAF;AAAUF,EAAAA,QAAV;AAAoBQ,EAAAA,MAApB;AAA4BG,EAAAA,MAA5B;AAAoCI,EAAAA;AAApC,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const config = {\n    headers: { 'Authorization': token },\n  } \n  const response = await axios.get(baseUrl, config)\n  return response.data\n}\n\nconst create = async (newBlog) => {\n  const config = {\n    headers: { 'Authorization': token }\n  } \n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst update = async (updatedBlog) => {\n  const config = {\n    headers: { 'Authorization': token }\n  } \n  const response = await axios.put(baseUrl+'/'+updatedBlog.id, updatedBlog, config)\n  return response.data\n}\n\nconst deleteBlog = async (id) => {\n  const config = {\n    headers: { 'Authorization': token }\n  } \n  const response = await axios.delete(baseUrl+'/'+id,config)\n  return response.data\n}\n\nexport default { getAll, setToken, create, update, deleteBlog }"]},"metadata":{},"sourceType":"module"}