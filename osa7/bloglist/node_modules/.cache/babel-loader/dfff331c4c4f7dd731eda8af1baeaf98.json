{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\n\nconst getAll = async token => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  const response = await axios.get(baseUrl, config);\n  return response.data;\n};\n\nconst create = async (newBlog, token) => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  const response = await axios.post(baseUrl, newBlog, config);\n  return response.data;\n};\n\nconst update = async (updatedBlog, token) => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  const response = await axios.put(baseUrl + '/' + updatedBlog.id, updatedBlog, config);\n  return response.data;\n};\n\nconst deleteBlog = async (id, token) => {\n  const config = {\n    headers: {\n      'Authorization': token\n    }\n  };\n  const response = await axios.delete(baseUrl + '/' + id, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteBlog\n};","map":{"version":3,"sources":["/home/s015sir/git/fullstack/osa7/bloglist/src/services/blogs.js"],"names":["axios","baseUrl","getAll","token","config","headers","response","get","data","create","newBlog","post","update","updatedBlog","put","id","deleteBlog","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC9B,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,uBAAiBF;AAAnB;AADI,GAAf;AAGA,QAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,EAAmBG,MAAnB,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACD,CAND;;AAQA,MAAMC,MAAM,GAAG,OAAOC,OAAP,EAAgBP,KAAhB,KAA0B;AACvC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,uBAAiBF;AAAnB;AADI,GAAf;AAGA,QAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACW,IAAN,CAAWV,OAAX,EAAoBS,OAApB,EAA6BN,MAA7B,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACD,CAND;;AAQA,MAAMI,MAAM,GAAG,OAAOC,WAAP,EAAoBV,KAApB,KAA8B;AAC3C,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,uBAAiBF;AAAnB;AADI,GAAf;AAGA,QAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACc,GAAN,CAAUb,OAAO,GAAC,GAAR,GAAYY,WAAW,CAACE,EAAlC,EAAsCF,WAAtC,EAAmDT,MAAnD,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACD,CAND;;AAQA,MAAMQ,UAAU,GAAG,OAAOD,EAAP,EAAWZ,KAAX,KAAqB;AACtC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,uBAAiBF;AAAnB;AADI,GAAf;AAGA,QAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACiB,MAAN,CAAahB,OAAO,GAAC,GAAR,GAAYc,EAAzB,EAA4BX,MAA5B,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACD,CAND;;AAQA,eAAe;AAAEN,EAAAA,MAAF;AAAUO,EAAAA,MAAV;AAAkBG,EAAAA,MAAlB;AAA0BI,EAAAA;AAA1B,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = async (token) => {\n  const config = {\n    headers: { 'Authorization': token },\n  } \n  const response = await axios.get(baseUrl, config)\n  return response.data\n}\n\nconst create = async (newBlog, token) => {\n  const config = {\n    headers: { 'Authorization': token }\n  } \n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst update = async (updatedBlog, token) => {\n  const config = {\n    headers: { 'Authorization': token }\n  } \n  const response = await axios.put(baseUrl+'/'+updatedBlog.id, updatedBlog, config)\n  return response.data\n}\n\nconst deleteBlog = async (id, token) => {\n  const config = {\n    headers: { 'Authorization': token }\n  } \n  const response = await axios.delete(baseUrl+'/'+id,config)\n  return response.data\n}\n\nexport default { getAll, create, update, deleteBlog }"]},"metadata":{},"sourceType":"module"}